{"version":3,"sources":["components/register/Register.jsx","pages/login/Login.jsx","components/users/User.jsx","components/users/ListUsers.jsx","components/message/Message.tsx","components/chatbox/Messages.jsx","components/chatbox/Send.jsx","components/glitch/Glitch.jsx","components/hitmarker/Hitmarker.jsx","components/toolbox/Toolbox.jsx","pages/home/Home.jsx","pages/intro/Intro.jsx","App.jsx","reportWebVitals.ts","index.tsx"],"names":["Register","socket","setUsernameGL","useState","Audio","typing","history","useHistory","username","setUsername","goValid","setGoValid","handleRegister","emit","push","className","onChange","e","target","value","length","onKeyDown","key","play","type","placeholder","onClick","Login","style","maxWidth","src","alt","User","id","name","ListUsers","usernameGL","mode","users","setUsers","nbAno","setNbAno","useEffect","on","filter","user","newUser","prevUsers","map","ano","currentUser","motion","div","drag","transform","sort","a","b","localeCompare","Message","auteur","fromClient","fnHurt","fnDestruction","lifepoints","setLifepoints","animHurt","setAnimHurt","lp","setTimeout","defaultProps","Messages","fnHurtMe","messagesEndRef","useRef","messages","setMessages","destruction","hurt","clearedMessages","message","prevMessages","newMessages","current","scrollIntoView","behavior","maxHeight","Object","values","time","date","Date","toLocaleTimeString","ref","Send","glitchAppear","setMessage","send","handleSubmit","onKeyPress","Glitch","rand","setRand","Math","floor","random","Hitmarker","Toolbox","setMode","Home","fnAudio","fnToggleAudio","audioState","glitch","setGlitch","hitmarker","setHitmarker","menuOpen","setMenuOpen","Intro","glitchAudio","spanRef","setInterval","to","App","intro","homeAudio","setAudioState","setSocket","newSocket","io","close","path","pause","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9c124283.chunk.js","sourcesContent":["import { useState } from 'react'\nimport { useHistory } from \"react-router-dom\"\nimport './register.scss'\n\nconst Register = ({ socket, setUsernameGL }) => {\n\n    const [typing] = useState(new Audio('/assets/audio/typing_key_2.mp3'))\n\n    const history = useHistory();\n\n    const [username, setUsername] = useState('');\n    const [goValid, setGoValid] = useState(false)\n\n    const handleRegister = () => {\n        if(username !== null & username !== '') {\n            socket.emit('setUsername', username)\n            socket.emit('getUsers')\n            setUsernameGL(username)\n            setUsername('')\n            history.push('/intro')\n        }\n    }\n\n    const handleChange = e => {\n        e.target.value.length > 0 ? setGoValid(true) : setGoValid(false)\n        setUsername(e.target.value)\n    }\n\n    const handleWrite = e => {\n        if(e.key === 'Enter') {\n            handleRegister()\n        }\n        typing.play()\n    }\n\n    return (\n        <div>\n            <input className=\"input-login w-full bg-gray-100 px-4 py-3\" onChange={handleChange} onKeyDown={handleWrite} value={username} type=\"text\" placeholder=\"Entrez votre nom...\" />\n            <input onClick={handleRegister} className={`btn-login ${goValid ? 'active' : ''}`} type=\"submit\" value=\"Let's go\" />\n        </div>\n    )\n}\n\nexport default Register\n","import Register from '../../components/register/Register'\n\nconst Login = ({ socket, username, setUsername }) => {\n    \n    return (\n        <div className=\"h-screen flex flex-col justify-center items-center\">\n            <img style={{ maxWidth: 1000 }} className=\"w-full\" src=\"/assets/logo.svg\" alt=\"Babel's Code\" />\n            <h1 className=\"heading-login mt-12 text-white\">Type your pseudo</h1>\n            <Register socket={socket} setUsernameGL={setUsername} />\n        </div>\n    )\n}\n\nexport default Login\n","import './user.scss'\n\nconst User = ({ id, name }) => {\n    return (\n        <div key={id} className=\"box-user\">\n            <p>{name}</p>\n        </div>\n    )\n}\n\nexport default User\n","import { useState, useEffect } from 'react'\nimport { motion } from 'framer-motion'\nimport User from './User'\nimport './listUsers.scss'\n\nconst ListUsers = ({ socket, usernameGL, mode }) => {\n\n    const [users, setUsers] = useState([])\n    const [nbAno, setNbAno] = useState(0)\n\n    useEffect(() => {\n\n        const usersListener = (users) => {\n\n            setNbAno(users.filter(function(user) {\n                return user.name === 'Anonymous'\n            }).length)\n\n            setUsers(users);\n\n        }\n        \n        const userListener = (user) => {\n            if(user.name === 'Anonymous') {\n                setNbAno(ano =>  {\n                    return ano += 1\n                })\n            }\n            setUsers((prevUsers) => [...prevUsers, user])\n        }\n\n        const updateUsername = (newUser) => {\n            setUsers((prevUsers) => {\n              return prevUsers.map((user) => {\n                return user.id === newUser.id ? newUser : user;\n              })\n            })\n        };\n\n        const deleteUserListener = (user) => {\n            setUsers((prevUsers) => {\n                return prevUsers.filter((currentUser) => currentUser.id !== user.id)\n            })\n        }\n\n        socket.on('users', usersListener)\n        socket.on('updateUsername', updateUsername)\n\n        socket.on('userConnection', userListener)\n        socket.on('userDisconnection', deleteUserListener)\n\n        socket.emit('getUsers')\n        \n    }, [])\n\n    return (\n        <motion.div drag={mode === 'Chaos'}>\n            <div className=\"global-username mt-10 flex gap-3\">\n                <img src=\"/assets/user.svg\" alt=\"\"/>\n                <p style={{ transform: 'translateY(0.1em)' }} className=\"block\">{usernameGL ? usernameGL : 'Anonymous'}</p>\n            </div>\n            <p className=\"mt-6 heading-list-users\">Users online :</p>\n            <div className=\"list-users mt-4\">\n                <div className=\"flex flex-col items-end\">\n                    {users\n                        .sort((a, b) => a.name.localeCompare(b.name))\n                        .filter(function(user) {\n                            return user.name !== 'Anonymous' && user.name !== ''\n                        })\n                        .map((user) => (\n                            <User key={user.id} name={user.name} />\n                        ))\n                    }\n                    {nbAno !== 0 && <User name={`Anonymous x${nbAno}`} />}\n                </div>\n            </div>\n        </motion.div>\n    )\n}\n\nexport default ListUsers\n","import { useState } from 'react'\nimport './message.scss'\n\ninterface Props {\n    value: string,\n    auteur: string,\n    date: Date,\n    fromClient?: boolean,\n    mode: string,\n    fnHurt: () => void,\n    fnDestruction: () => void\n}\n\nconst Message = ({value, auteur, fromClient, mode, fnHurt, fnDestruction}: Props): JSX.Element => {\n\n    const [lifepoints, setLifepoints] = useState(3)\n    const [animHurt, setAnimHurt] = useState(false)\n\n    const hit = () => {\n        if(mode === 'Destruction') {\n            if(lifepoints >= 1) {\n                setLifepoints(lp =>  {\n                    return lp -= 1\n                })\n            }\n            if(lifepoints === 1) {\n                fnDestruction()\n            } else {\n                fnHurt()\n                setAnimHurt(true)\n                setTimeout(() => {\n                    setAnimHurt(false)\n                }, 1000)\n            }\n        }\n    }\n\n    return (\n        <div onClick={hit} className={`box-message ${lifepoints === 0 ? 'disabled' : ''} ${fromClient ? 'fromClient' : ''} ${animHurt ? 'hit' : ''}`}>\n            <img className=\"glitch\" src=\"/assets/glitch-message.svg\" alt=\"\"/>\n            <div className={`flex flex-col ${fromClient ? 'items-end' : 'items-start'}`}>\n                <div className=\"box-auteur-message\">\n                    <p>{auteur} :</p>\n                    <div className=\"px-4 flex items-center gap-2\">\n                        {lifepoints >= 1 ? <img src=\"/assets/heart-full.svg\" alt=\"\" /> : <img src=\"/assets/heart-empty.svg\" alt=\"\" />}\n                        {lifepoints >= 2 ? <img src=\"/assets/heart-full.svg\" alt=\"\" /> : <img src=\"/assets/heart-empty.svg\" alt=\"\" />}\n                        {lifepoints === 3 ? <img src=\"/assets/heart-full.svg\" alt=\"\" /> : <img src=\"/assets/heart-empty.svg\" alt=\"\" />}\n                    </div>\n                </div>\n                <p className=\"box-content-message\">{value}</p>\n                {fromClient && <div>\n                    <div className=\"eye\"></div>\n                </div>}\n            </div>\n        </div>\n    )\n}\n\nMessage.defaultProps = {\n    fromClient: true\n}\n\nexport default Message\n","import { useState, useEffect, useRef } from 'react';\nimport Message from '../message/Message'\nimport { decrypt } from 'react-crypt-gsm'\nimport './messages.scss'\n\nconst Messages = ({ socket, mode, fnHurtMe }) => {\n\n    const box = useRef(0);\n\n    const messagesEndRef = useRef(null)\n\n    const [messages, setMessages] = useState({})\n\n    const [destruction] = useState(new Audio('/assets/audio/destruction.mp3'))\n    const [hurt] = useState(new Audio('/assets/audio/hurt-villager.mp3'))\n\n    const fnHurt = () => (\n        hurt.play()\n    )\n\n    const fnDestruction = () => {\n        destruction.play()\n    }\n\n    const scrollToBottom = () => {\n        messagesEndRef.current.scrollIntoView({ behavior: 'smooth' })\n    }\n\n    useEffect(() => {\n\n        const messagesListener = (messages) => {\n            const clearedMessages = messages.filter(message => typeof(message.value) === 'string')\n            setMessages(clearedMessages)\n        }\n\n        const messageListener = (message) => {\n            if(typeof(message.value) === 'string') {\n                setMessages((prevMessages) => {\n                    const newMessages = {...prevMessages}\n                    newMessages[message.id] = message\n                    return newMessages\n                })\n            }\n        }\n        \n        socket.on('messages', messagesListener)\n        socket.on('message', messageListener)\n        socket.emit('getMessages')\n\n    }, [socket]);\n\n    useEffect(scrollToBottom, [messages])\n\n    return (\n        <div style={{ maxHeight: '80vh' }} className={`chatbox m-auto pr-4 overflow-x-hidden overflow-y-auto`}>\n            {[...Object.values(messages)]\n                .sort((a, b) => a.time - b.time)\n                .filter((message) => {\n                    return message.value.length < 500\n                })\n                .map((message) => (\n                <Message\n                    key={message.id}\n                    value={message.value}\n                    auteur={message.user.name}\n                    date={new Date(message.time).toLocaleTimeString()}\n                    fromClient={message.user.id === socket.id}\n                    mode={mode}\n                    fnHurt={() => {message.user.id === socket.id ? fnHurtMe() : fnHurt()}}\n                    fnDestruction={fnDestruction}\n                />\n                ))\n            }\n            <div ref={messagesEndRef} />\n        </div>\n    )\n}\n\nexport default Messages\n","import { useState } from 'react'\nimport { encrypt } from 'react-crypt-gsm'\nimport './Send.scss'\n\nconst Send = ({ glitchAppear, socket }) => {\n\n    const [message, setMessage] = useState('')\n\n    const [typing] = useState(new Audio('/assets/audio/typing_key_2.mp3'))\n    const [send] = useState(new Audio('/assets/audio/send-message.mp3'))\n\n    const handleWrite = e => {\n        if(e.key === 'Enter') {\n            handleSubmit()\n        }\n    }\n\n    const handleKeyPress = () => {\n        typing.play()\n    }\n\n    const handleSubmit = () => {\n        if(message !== null && message !== '') {\n            socket.emit('message', message)\n            //socket.emit('message', encrypt(message).content)\n            setMessage('')\n            glitchAppear()\n            send.play()\n        }\n    }\n\n    return (\n        <div className=\"send-container mt-4\">\n            <div className=\"flex\">\n                <input onChange={e => setMessage(e.target.value)} onKeyPress={handleKeyPress} onKeyDown={handleWrite} className=\"w-full p-4 border-l border-t border-b\" type=\"text\" value={message} placeholder=\"Votre message...\" />\n                <input onClick={handleSubmit} className=\"btn-send p-4 border cursor-pointer\" type=\"submit\" value=\" \" />\n            </div>\n        </div>\n    )\n}\n\nexport default Send\n","import './glitch.scss'\nimport { useEffect } from 'react'\nimport { useState } from 'react'\n\nconst Glitch = () => {\n\n    const [rand, setRand] = useState(1)\n\n    useEffect(() => {\n        setRand(Math.floor(Math.random() * 1) + 1)\n    }, [])\n\n    return (\n        <div className=\"glitch\">\n            <img src={`/assets/glitch${rand}.png`} alt=\"Glitch\" />\n        </div>\n    )\n}\n\nexport default Glitch\n","const Hitmarker = () => {\n    return (\n        <div className=\"w-full h-screen fixed left-0 top-0 z-50\">\n            <img className=\"w-full h-full\" src=\"/assets/overlay-hurt/overlay-1.png\" alt=\"\" />\n        </div>\n    )\n}\n\nexport default Hitmarker\n","const Toolbox = ({setMode}) => {\n    return (\n        <div className=\"mt-6 pr-12 flex justify-end gap-6\">\n            <div onClick={() => setMode('Destruction')}>\n                <img className=\"h-12\" src=\"/assets/sword.svg\" alt=\"\" />\n            </div>\n            <div onClick={() => setMode('Light')}>\n                <img className=\"h-12\" src=\"/assets/light.svg\" alt=\"\" />\n            </div>\n        </div>\n    )\n}\n\nexport default Toolbox\n","import { useEffect, useState } from 'react'\nimport ListUsers from '../../components/users/ListUsers.jsx'\nimport Messages from '../../components/chatbox/Messages.jsx'\nimport Send from '../../components/chatbox/Send'\nimport Glitch from '../../components/glitch/Glitch.jsx'\nimport Hitmarker from '../../components/hitmarker/Hitmarker.jsx'\nimport BandeauName from '../../components/bandeauName/BandeauName'\nimport Toolbox from '../../components/toolbox/Toolbox.jsx'\nimport './home.scss'\n\nconst Home = ({ socket, username, setUsername, fnAudio, fnToggleAudio, audioState }) => {\n    \n    const [glitch, setGlitch] = useState(false)\n    const [hitmarker, setHitmarker] = useState(false)\n    const [mode, setMode] = useState('Normal')\n    const [menuOpen, setMenuOpen] = useState(false)\n\n    const [hurt] = useState(new Audio('/assets/audio/hurt-villager.mp3'))\n\n    useEffect(() => {\n        fnAudio()\n    }, [])\n\n    const glitchAppear = () => {\n        setGlitch(true)\n        setTimeout(() => {\n            setGlitch(false)\n        }, 200)\n    }\n\n    const hitmarkerAppear = () => {\n        hurt.play()\n        setHitmarker(true)\n        setTimeout(() => {\n            setHitmarker(false)\n        }, 200)\n    }\n\n    return (\n        <div className={`${mode === 'Destruction' && 'cursor-sword'} wrapper m-auto px-10 flex`}>\n\n            { socket ? (\n                <>\n                {glitch && <Glitch />}\n                {hitmarker && <Hitmarker />}\n                <div className=\"w-full h-screen flex relative\">\n                    <div className={`menu-side ${menuOpen ? 'active' : ''} w-4/5 h-screen md:w-1/3 lg:w-1/4 bg-black md:bg-transparent pr-6 pt-10`}>\n                        <div className=\"flex justify-between\">\n                            {audioState ? <img className=\"toggleAudio\" onClick={fnToggleAudio} src=\"/assets/audio.svg\" alt=\"Couper l'audio\" />:<img className=\"toggleAudio\" onClick={fnToggleAudio} src=\"/assets/audio-off.svg\" alt=\"Rétablir l'audio\" />}\n                            <img className=\"icon-burger hidden\" onClick={() => setMenuOpen(false)} src=\"/assets/burger-menu.svg\" alt=\"\" />\n                        </div>\n                        <ListUsers socket={socket} usernameGL={username} mode={mode} />\n                        <Toolbox setMode={setMode} />\n                    </div>\n                    <div className=\"w-full md:w-2/3 lg:w-3/4 pt-10\">\n                            <img className=\"icon-burger h-6 hidden mb-8\" onClick={() => setMenuOpen(true)} src=\"/assets/burger-menu-close.svg\" alt=\"\" />\n                        <Messages socket={socket} mode={mode} fnHurtMe={hitmarkerAppear} />\n                        <Send glitchAppear={glitchAppear} socket={socket} />\n                    </div>\n                </div>\n                </>\n            ) : (\n                <div>Not Connected</div>\n            )}\n        \n        </div>\n    )\n}\n\nexport default Home\n","import { useState, useEffect, useRef } from 'react'\nimport { Link } from 'react-router-dom'\nimport { gsap, TimelineLite } from 'gsap/all'\nimport Glitch from '../../components/glitch/Glitch'\nimport './intro.scss'\n\nconst Intro = ({ username, fnAudio }) => {\n\n    const [glitchAudio] = useState(new Audio('/assets/audio/destruction.mp3'))\n    const [glitch, setGlitch] = useState(false)\n\n    const spanRef = useRef()\n\n    useEffect(() => {\n        \n        glitchAudio.play()\n\n        setGlitch(true)\n        setTimeout(() => {\n            setGlitch(false)\n        }, 100)\n        \n        setInterval(() => {\n            setGlitch(true)\n            setTimeout(() => {\n                setGlitch(false)\n            }, 100)\n        }, 8000)\n\n        fnAudio()\n\n    }, [])\n\n    return (\n        <>\n            {glitch && <Glitch />}\n            <div className=\"h-screen px-10 flex flex-col justify-center items-center text-white\">\n                <img style={{ maxWidth: 1000 }} className=\"w-full\" src=\"/assets/logo.svg\" alt=\"Babel's Code\" />\n                <h1 className=\"heading-intro\">Welcome <span ref={spanRef}>{username}</span></h1>\n                <p className=\"sentence-intro flex items-center gap-4\"><img className=\"h-4\" src=\"/assets/terminal.svg\" alt=\"\" /> It's time to unlock the universe's secret...</p>\n                <p className=\"sentence-intro flex items-center gap-4\"><img className=\"h-4\" src=\"/assets/terminal.svg\" alt=\"\" /> Don't be afraid to lose your mind...</p>\n                <Link className=\"btn-intro\" to=\"/general\"><img src=\"/assets/user.svg\" alt=\"\"/> Got it</Link>\n            </div>\n        </>\n    )\n}\n\nexport default Intro\n","import { useState, useEffect } from 'react';\nimport io from 'socket.io-client'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport Login from './pages/login/Login.jsx'\nimport Home from './pages/home/Home.jsx'\nimport Intro from './pages/intro/Intro.jsx'\nimport './App.css'\n\nfunction App() {\n\n  const [intro] = useState(new Audio('/assets/audio/intro.mp3'))\n  const [homeAudio] = useState(new Audio('/assets/audio/together.mp3'))\n  const [audioState, setAudioState] = useState(true)\n\n  const [socket, setSocket] = useState(null)\n  const [username, setUsername] = useState('')\n\n  useEffect(() => {\n      //const newSocket = io(`http://localhost:8080`)\n      const newSocket = io(`https://whispering-chamber-09886.herokuapp.com`)\n      setSocket(newSocket)\n      return () => newSocket.close()\n  }, [setSocket])\n  \n  const startAudio = () => {\n    intro.play()\n  }\n\n  const audioHome = () => {\n    intro.pause()\n    homeAudio.play()\n  }\n\n  const toggleAudio = () => {\n    audioState ? homeAudio.pause() : homeAudio.play()\n    setAudioState(!audioState)\n  }\n\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/general\">\n          <Home fnAudio={audioHome} fnToggleAudio={toggleAudio} audioState={audioState} socket={socket} username={username} setUsername={setUsername} />\n        </Route>\n        <Route path=\"/intro\">\n          <Intro fnAudio={startAudio} username={username} />\n        </Route>\n        <Route exact path=\"/\">\n          <Login socket={socket} username={username} setUsername={setUsername} />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.jsx';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}